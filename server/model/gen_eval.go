// Code generated by gogen.go; DO NOT EDIT.

package model

import (
	"crypto/md5"
	"encoding/hex"
)

const (
	SessionEvaluation_ClassNumber        = "classNumber"
	SessionEvaluation_Comments           = "comments"
	SessionEvaluation_KnowledgeRating    = "knowledge"
	SessionEvaluation_OverallRating      = "overall"
	SessionEvaluation_PresentationRating = "promotion"
	SessionEvaluation_Source             = "source"
	SessionEvaluation_Updated            = "updated"
	SessionEvaluation_UsefulnessRating   = "usefulness"
)

const (
	ConferenceEvaluation_CheckinRating           = "checkin"
	ConferenceEvaluation_Comments                = "comments"
	ConferenceEvaluation_ExperienceRating        = "experience"
	ConferenceEvaluation_FacilitiesRating        = "facilities"
	ConferenceEvaluation_LearnTopics             = "learnTopics"
	ConferenceEvaluation_LunchRating             = "lunch"
	ConferenceEvaluation_MidwayRating            = "midway"
	ConferenceEvaluation_PromotionRating         = "promotion"
	ConferenceEvaluation_RegistrationRating      = "registration"
	ConferenceEvaluation_SignageWayfindingRating = "signageWayfinding"
	ConferenceEvaluation_Source                  = "source"
	ConferenceEvaluation_TeachTopics             = "teachTopics"
	ConferenceEvaluation_Updated                 = "updated"
	ConferenceEvaluation_WebsiteRating           = "website"
)

func (x *SessionEvaluation) CopyEditFieldsTo(y *SessionEvaluation) {
	y.ClassNumber = x.ClassNumber
	y.Comments = x.Comments
	y.KnowledgeRating = x.KnowledgeRating
	y.OverallRating = x.OverallRating
	y.PresentationRating = x.PresentationRating
	y.UsefulnessRating = x.UsefulnessRating
}

func (x *SessionEvaluation) EqualEditFields(y *SessionEvaluation) bool {
	return x.ClassNumber == y.ClassNumber &&
		x.Comments == y.Comments &&
		x.KnowledgeRating == y.KnowledgeRating &&
		x.OverallRating == y.OverallRating &&
		x.PresentationRating == y.PresentationRating &&
		x.UsefulnessRating == y.UsefulnessRating
}

func (x *SessionEvaluation) HashEditFields() string {
	h := md5.New()
	hashValue(h, "5f0935b30e68e83a1b3747f71a063c11")
	hashValue(h, x.ClassNumber)
	hashValue(h, x.Comments)
	hashValue(h, x.KnowledgeRating)
	hashValue(h, x.OverallRating)
	hashValue(h, x.PresentationRating)
	hashValue(h, x.UsefulnessRating)
	sum := h.Sum(nil)
	return hex.EncodeToString(sum[:])
}

func (x *ConferenceEvaluation) CopyEditFieldsTo(y *ConferenceEvaluation) {
	y.CheckinRating = x.CheckinRating
	y.Comments = x.Comments
	y.FacilitiesRating = x.FacilitiesRating
	y.LearnTopics = x.LearnTopics
	y.LunchRating = x.LunchRating
	y.MidwayRating = x.MidwayRating
	y.PromotionRating = x.PromotionRating
	y.RegistrationRating = x.RegistrationRating
	y.SignageWayfindingRating = x.SignageWayfindingRating
	y.TeachTopics = x.TeachTopics
	y.WebsiteRating = x.WebsiteRating
}

func (x *ConferenceEvaluation) EqualEditFields(y *ConferenceEvaluation) bool {
	return x.CheckinRating == y.CheckinRating &&
		x.Comments == y.Comments &&
		x.FacilitiesRating == y.FacilitiesRating &&
		x.LearnTopics == y.LearnTopics &&
		x.LunchRating == y.LunchRating &&
		x.MidwayRating == y.MidwayRating &&
		x.PromotionRating == y.PromotionRating &&
		x.RegistrationRating == y.RegistrationRating &&
		x.SignageWayfindingRating == y.SignageWayfindingRating &&
		x.TeachTopics == y.TeachTopics &&
		x.WebsiteRating == y.WebsiteRating
}

func (x *ConferenceEvaluation) HashEditFields() string {
	h := md5.New()
	hashValue(h, "42a4adc990457911029646bac8d301eb")
	hashValue(h, x.CheckinRating)
	hashValue(h, x.Comments)
	hashValue(h, x.FacilitiesRating)
	hashValue(h, x.LearnTopics)
	hashValue(h, x.LunchRating)
	hashValue(h, x.MidwayRating)
	hashValue(h, x.PromotionRating)
	hashValue(h, x.RegistrationRating)
	hashValue(h, x.SignageWayfindingRating)
	hashValue(h, x.TeachTopics)
	hashValue(h, x.WebsiteRating)
	sum := h.Sum(nil)
	return hex.EncodeToString(sum[:])
}
